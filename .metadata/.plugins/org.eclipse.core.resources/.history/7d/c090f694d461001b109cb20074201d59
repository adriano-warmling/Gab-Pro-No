How to:

A API tem fins didáticos e  permite os métodos POST e GET, o método de chamada se cada um dos respectivos métodos
e o output esperado serão demonstrados aqui, optou-se pelo uso de um banco de dados em memória (H2) para simplificar
o estudo e utilização da mesma por usar o localhost e o formato de dados em JSON.

Para verificar como foi modelado o banco de dados é possível usar o link:

http://localhost:8080/h2-console/login.jsp

_____________________________________________________________________________________________________________

*** OPCIONAL ***

Se desejar popular o banco de dados em memória para verificar rapidamente seu funcionamento sugiro o uso dos seguintes comandos:

INSERT INTO aluno (id , nome) VALUES (1, 'Juquinha'), (2, 'Ana'), (3, 'Joãozinho'), (4, 'Zezinho'), (5, 'Bela')

INSERT INTO PROVA  ( ID,  DESCRICAO) VALUES  (1, 'math'), (2, 'Geo')

INSERT INTO QUESTAO ( id, enunciado, opcao1, opcao2, opcao3, opcao_correta, peso) VALUES (1, 'Q1', 'A', 'B', 'C', 1, 10), (2, 'Q2', 'A', 'B', 'C', 1, 2), (3, 'Q3', 'A', 'B', 'C', 1, 2), (4, 'Q4', 'A', 'B', 'C', 1, 2), (5, 'Q5', 'A', 'B', 'C', 1, 2), (6, 'Q6', 'A', 'B', 'C', 1, 2)

INSERT INTO PROVA_QUESTOES (prova_id, questoes_id) VALUES (1, 1), (2, 2), (2, 3), (2, 4), (2, 5), (2, 6) 

INSERT INTO RESPOSTA (id, resposta, aluno_id, prova_id, questao_id) VALUES 
 (1, 1, 1, 1, 1),  (2, 1, 1, 2, 2),   (3, 1, 1, 2, 3),   (4, 1, 1, 2,4),    (5, 1, 1, 2, 5),   (6, 1, 1, 2, 6), 
 (7, 1, 2, 1, 1),  (8, 2, 2, 2, 2),   (9, 1, 2, 2, 3),   (10, 1, 2, 2, 4),  (11, 1, 2, 2, 5),  (12, 1, 2, 2, 6),
(13, 1, 3, 1, 1),  (14, 2, 3, 2, 2),  (15, 2, 3, 2, 3),  (16, 1, 3, 2, 4),  (17, 1, 3, 2, 5),  (18, 1, 3, 2, 6),
(19, 1, 4, 1, 1),  (20, 2, 4, 2, 2),  (21, 2, 4, 2, 3),  (22, 2, 4, 2, 4),  (23, 1, 4, 2, 5),  (24, 1, 4, 2, 6),
(25, 1, 5, 1, 1),  (26, 2, 5, 2, 2),  (27, 2, 5, 2, 3),  (28, 2, 5, 2, 4),  (29, 2, 5, 2, 5),  (30, 1, 5, 2, 6)


*** Comandos Rápidos ***

1) listar todos os alunos:		localhost:8080/alunos
2) Listar a média final do aluno:		localhost:8080/alunos/{id}/media
3) Listar alunos aprovados com média >= 7:		localhost:8080/aprovados

___________________________________________________________________________________________________________________

Para inserção através do Postman os seguintes comandos também podem ser usados:

** ALUNOS **

POST - localhost:8080/alunos
Apenas o nome é necessário o banco de dados faz um incremento automaticamente do ID.
 
{
    "nome" : "Lambda"
}

GET - localhost:8080/alunos

[
    {
        "id": 6,
        "nome": "Lambda"
    }
]
...

** PROVAS **

POST - localhost:8080/provas
 
{
    "id": 1,
    "descricao": "matematica",
    "questoes": [
        {
            "id": 1,
            "enunciado": "Sera que?",
            "opcao1": "sim",
            "opcao2": "não",
            "opcao3": "talvez",
            "opcaoCorreta": 1,
            "peso": 10
        }
    ]
}

GET - localhost:8080/provas

[
    {
        "id": 1,
        "descricao": "matematica",
        "questoes": [
            {
                "id": 1,
                "enunciado": "Sera que?",
                "opcao1": "sim",
                "opcao2": "não",
                "opcao3": "talvez",
                "opcaoCorreta": 1,
                "peso": 10
            }
        ]
    }
]


*** RESPOSTAS  ***

POST COMPLETO - localhost:8080/respostas

{
    "aluno": {
        "id": 1,
        "nome": "Juquinha"
    },
    "questao": {
        "id": 1,
        "enunciado": "Sera que?",
        "opcao1": "sim",
        "opcao2": "não",
        "opcao3": "talvez",
        "opcaoCorreta": 1,
        "peso": 10
    },
    "prova": {
        "id": 2,
        "descricao": "historia",
        "questoes": [
            {
                "id": 2,
                "enunciado": "Sera que?",
                "opcao1": "sim",
                "opcao2": "não",
                "opcao3": "talvez",
                "opcaoCorreta": 1,
                "peso": 10
            }
        ]
    },
    "resposta": 1
}

POST SIMPLIFICADO - localhost:8080/respostas

{
    "aluno": {
        "id": 1
    },
    "questao": {
        "id": 1
    },
    "prova": {
        "id": 1,
        "questoes": [
            {
                "id": 1
            }
        ]
    },
    "resposta": 1
}


*** API - MÉDIA FINAL DO ALUNO ***

Para listar a média final do aluno:		localhost:8080/alunos/{id}/media


*** API - LISTA DE APROVADOS ***
Para listar os alunos aprovados com média >= 7:		localhost:8080/aprovados

__________________________________________________________________________________

Observação:

De acordo com as especificações dadas para este desafio, como a média ponderada nunca é efetivamente usada, 
o ideal para verificar o correto funcionamento dela é que as provas tenham X questões, porém é imperativo que o somatório dos pesos
das questões seja sempre de 10. 

Uma prova matemática do princípio pode ser requisitada para meu e-mail se desejar compreender melhor a razão disso.